import sqlite3
from datetime import datetime

def create_db():
    # Подключение к базе данных
    conn = sqlite3.connect('library.db')
    cursor = conn.cursor()

    # Таблица пользователей
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS Users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            full_name TEXT NOT NULL,
            student_group TEXT,
            username TEXT NOT NULL UNIQUE,
            password TEXT NOT NULL,
            role TEXT NOT NULL
        )
    ''')

    # Таблица книг
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS Books (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            author TEXT NOT NULL,
            genre TEXT NOT NULL,
            status TEXT DEFAULT 'available',
            description TEXT
        )
    ''')

    # Таблица посещений
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS Visits (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username INTEGER,
            visit_date TEXT NOT NULL,
            FOREIGN KEY (username) REFERENCES Users(username)
        )
    ''')

    # Таблица выданных книг
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS IssuedBooks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id TEXT NOT NULL,
            book_id INTEGER NOT NULL,
            issue_date TEXT NOT NULL,
            return_date TEXT,
            status TEXT,
            FOREIGN KEY (user_id) REFERENCES Users(id),
            FOREIGN KEY (book_id) REFERENCES Books(id)
        )
        ''')

    # Таблица броней
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS Reservations (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER NOT NULL,
        book_id INTEGER NOT NULL,
        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
        reserve_date DATE DEFAULT CURRENT_DATE,
        status TEXT,
        FOREIGN KEY (user_id) REFERENCES Users(id),
        FOREIGN KEY (book_id) REFERENCES Books(id)
    )
    ''')

    # Вставка пользователей в таблицу Users
    users = [
        ('Иванов Иван Иванович','101ТГ','IvanovIvan','pass123','reader'),
        ('Воронова Вера Алексеевна','314Ю','VoronovaVera', 'pass123', 'reader'),
        ('Козлов Даниил Валерьевич','41ЭС','KozlovDanya', 'pass123', 'reader'),
        ('Пономарёва Наталья Викторовна','библиотекарь','librarian', 'librarian123', 'librarian'),
    ]

    # Вставка книг в таблицу Books
    books = [
        ('Война и мир', 'Лев Толстой', 'Исторический роман',
         'Эпопея о жизни дворянских семей во времена войны с Наполеоном.'),
        ('Преступление и наказание', 'Фёдор Достоевский', 'Психологический роман',
         'История бедного студента, совершившего убийство, и его моральных страданий.'),
        ('Анна Каренина', 'Лев Толстой', 'Драма', 'Трагическая история любви замужней женщины и молодого офицера.'),
        ('Евгений Онегин', 'Александр Пушкин', 'Роман в стихах',
         'Судьбы молодого дворянина и его окружения в России XIX века.'),
        ('Мастер и Маргарита', 'Михаил Булгаков', 'Мистический роман',
         'Роман о любви, сатире на общество и визите Сатаны в Москву.'),
        ('Отцы и дети', 'Иван Тургенев', 'Роман', 'Конфликт поколений и идеологий в России XIX века.'),
        ('Доктор Живаго', 'Борис Пастернак', 'Исторический роман',
         'Жизнь и судьба врача-поэта в эпоху революции и гражданской войны.'),
        ('Обломов', 'Иван Гончаров', 'Социальный роман', 'История ленивого дворянина и его размышлений о жизни.'),
        ('Герой нашего времени', 'Михаил Лермонтов', 'Психологический роман',
         'Судьба загадочного офицера через призму различных рассказчиков.'),
        ('Тихий Дон', 'Михаил Шолохов', 'Исторический роман',
         'Эпопея о жизни казаков во времена революции и гражданской войны.'),
        ('Человек в футляре', 'Антон Чехов', 'Повесть', 'Сатира на замкнутость и бюрократическую косность.'),
        ('Дубровский', 'Александр Пушкин', 'Роман', 'История дворянина, ставшего разбойником из-за несправедливости.'),
        ('Записки охотника', 'Иван Тургенев', 'Сборник рассказов',
         'Зарисовки жизни крестьян и помещиков в дореформенной России.'),
        ('Братья Карамазовы', 'Фёдор Достоевский', 'Философский роман',
         'История семьи и их конфликтов на фоне размышлений о вере и морали.'),
        ('Мёртвые души', 'Николай Гоголь', 'Сатирический роман', 'Сатира на российское общество и бюрократию XIX века.'),
        ('Собор Парижской Богоматери', 'Виктор Гюго', 'Исторический роман',
         'Трагическая история любви и отчуждения в Средневековье.'),
        ('Капитанская дочка', 'Александр Пушкин', 'Историческая повесть',
         'Любовь и верность на фоне восстания Пугачёва.'),
        ('Вишнёвый сад', 'Антон Чехов', 'Пьеса',
         'Драматическая история семейного поместья, которое вот-вот будет продано.'),
        ('Гроза', 'Александр Островский', 'Драма', 'Конфликт в семье на фоне строгих патриархальных устоев.'),
        ('Ревизор', 'Николай Гоголь', 'Комедия', 'Сатира на чиновничество и страх перед властью.'),
        ('Детство', 'Лев Толстой', 'Автобиографический роман', 'Воспоминания о детских годах автора в России.'),
        ('Пиковая дама', 'Александр Пушкин', 'Повесть', 'История страсти и мистики, связанной с картами.'),
        ('Левша', 'Николай Лесков', 'Повесть', 'История о русском мастере, подковавшем блоху.'),
        ('Шинель', 'Николай Гоголь', 'Повесть', 'История маленького человека и его утраты.'),
        ('Белая гвардия', 'Михаил Булгаков', 'Исторический роман',
         'Жизнь семьи Турбиных на фоне Гражданской войны в России.'),
        ('Кому на Руси жить хорошо', 'Николай Некрасов', 'Поэма',
         'Поиск ответа на вопрос, кто из крестьян может быть счастливым.'),
        ('Господа Головлёвы', 'Михаил Салтыков-Щедрин', 'Социальный роман',
         'История вырождения дворянской семьи на фоне жадности и интриг.'),
        ('Обыкновенная история', 'Иван Гончаров', 'Роман',
         'История юноши, сталкивающегося с суровой реальностью жизни.'),
        ('Слово о полку Игореве', 'Неизвестный автор', 'Эпос',
         'Древнерусская поэма о походе князя Игоря против половцев.'),
        ('Лолита', 'Владимир Набоков', 'Роман', 'Скандальная и трагическая история о запретной любви.')
    ]

    # Проверка и вставка пользователей
    cursor.execute('SELECT COUNT(*) FROM Users')
    if cursor.fetchone()[0] == 0:
        cursor.executemany(
            'INSERT INTO Users (full_name, student_group, username, password, role) VALUES (?, ?, ?, ?, ?)', users)

    # Проверка и вставка книг
    cursor.execute('SELECT COUNT(*) FROM Books')
    if cursor.fetchone()[0] == 0:
        cursor.executemany('INSERT INTO Books (title, author, genre, description) VALUES (?, ?, ?, ?)', books)

    # Проверка данных
    cursor.execute('SELECT * FROM IssuedBooks')
    print("Выданные книги:", cursor.fetchall())

    conn.commit()
    conn.close()

    print("База данных успешно создана и заполнена!")


# Вызов функции
create_db()
